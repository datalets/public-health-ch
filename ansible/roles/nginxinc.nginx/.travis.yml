---
language: python
services:
  - docker
jobs:
  include:
    - name: "Install Specific Version Test - Debian"
      env: scenario=default
    - name: "Install Specific Version Test - Alpine"
      env: scenario=default_alpine
    - name: "Install Specific Version Test - CentOS"
      env: scenario=default_centos
    - name: "Install Modules Test - Debian"
      env: scenario=module
    - name: "Install Modules Test - Alpine"
      env: scenario=module_alpine
    - name: "Install Modules Test - CentOS"
      env: scenario=module_centos
    - name: "Install Stable Branch and Push Configuration Test - Debian"
      env: scenario=stable_push
    - name: "Install Stable Branch and Push Configuration Test - Alpine"
      env: scenario=stable_push_alpine
    - name: "Install Stable Branch and Push Configuration Test - CentOS"
      env: scenario=stable_push_centos
    - name: "Use Template Setting Test - Debian"
      env: scenario=template
    - name: "Use Template Setting Test - Alpine"
      env: scenario=template_alpine
    - name: "Use Template Setting Test - CentOS"
      env: scenario=template_centos
    - name: "Install Unit Test - Debian"
      env: scenario=unit
    - name: "Install Unit Test - Alpine"
      env: scenario=unit_alpine
    - name: "Install Unit Test - CentOS"
      env: scenario=unit_centos
    - name: "Install from Source Test - Debian"
      env: scenario=source
    - name: "Install from Source Test - Alpine"
      env: scenario=source_alpine
    - name: "Install from Source Test - CentOS"
      env: scenario=source_centos
before_install:
  - sudo apt-get -qq update
install:
  - pip install ansible==2.9.6
  - pip install molecule[docker]>=3.0.0
  - pip install testinfra
  - pip install ansible-lint
  - pip install flake8
script:
  - molecule --version
  - ansible --version
  - travis_wait 50 molecule test -s $scenario
notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
